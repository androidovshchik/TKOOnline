apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'AndResGuard'

android {
    compileSdkVersion 29
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 10
        versionName "v.10"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", "true")
            }
        }
    }
    signingConfigs {
        release {
            storeFile file("keystore/release.jks")
            storePassword "tkonline"
            keyAlias "tkonline"
            keyPassword "tkonline"
            v1SigningEnabled true
            v2SigningEnabled true
            // countryCode 07
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
            //buildConfigField("String", "BASE_URL", "\"https://msknt2.iqsolution.ru/mobile/v1/\"")
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //buildConfigField("String", "BASE_URL", "\"https://msknt.iqsolution.ru/mobile/v1/\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${applicationId.substring(applicationId.lastIndexOf(".") + 1)}${variant.versionCode}-${variant.buildType.name}.apk"
        }
        variant.assembleProvider.configure { assemble ->
            assemble.doLast {
                delete fileTree(dir: "$rootDir/installer/tkonline", include: '*.apk')
                copy {
                    from variant.outputs*.outputFile
                    into "$rootDir/installer/tkonline"
                }
            }
        }
    }
    lintOptions {
        //checkReleaseBuilds false
        //abortOnError false
    }
}

// ./gradlew resguard[BuildType | Flavor]
andResGuard {
    mappingFile = null
    use7zip = true
    useSign = true
    // it will keep the origin path of your resources when it's true
    keepRoot = false
    whiteList = []
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif"
    ]
    sevenzip {
        artifact = "com.tencent.mm:SevenZip:${Versions.andresguard}"
        //path = "/usr/local/bin/7za"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${Versions.kotlin}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"
    implementation "org.jetbrains.anko:anko-commons:${Versions.anko}"
    implementation "org.jetbrains.anko:anko-sdk23:${Versions.anko}"
    implementation "org.jetbrains.anko:anko-sdk23-listeners:${Versions.anko}"
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha01'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
    implementation 'androidx.work:work-runtime-ktx:2.3.1'
    implementation "androidx.room:room-runtime:${Versions.room}"
    kapt "androidx.room:room-compiler:${Versions.room}"
    implementation "androidx.camera:camera-camera2:1.0.0-alpha10"
    implementation "androidx.camera:camera-view:1.0.0-alpha07"
    implementation "androidx.camera:camera-lifecycle:1.0.0-alpha10"
    implementation 'androidx.exifinterface:exifinterface:1.2.0-beta01'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0-alpha01'
    implementation 'com.google.android.gms:play-services-vision:19.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation "org.kodein.di:kodein-di-generic-jvm:${Versions.kodein}"
    implementation "org.kodein.di:kodein-di-framework-android-core:${Versions.kodein}"
    implementation "com.squareup.retrofit2:retrofit:${Versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${Versions.retrofit}"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'
    implementation 'com.rabbitmq:amqp-client:5.7.3'
    implementation 'net.danlew:android.joda:2.10.3'
    implementation 'com.chibatching.kotpref:kotpref:2.9.1'
    implementation 'io.coil-kt:coil:0.8.0'
    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:2.0.3'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.elvishew:xlog:1.6.1'
    debugImplementation "com.facebook.stetho:stetho:${Versions.stetho}"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:${Versions.stetho}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        def requested = details.requested
        if (requested.group == 'org.jetbrains.kotlin' && requested.name == 'kotlin-reflect') {
            details.useVersion Versions.kotlin
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
